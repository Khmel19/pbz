CREATE TABLE company
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(25),
    telephone VARCHAR(25),
    email VARCHAR(25),
    address VARCHAR(25)
);

CREATE TABLE price
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    price INTEGER,
    date VARCHAR(15)
);

CREATE TABLE course
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(25),
    type VARCHAR(25),
    count_of_days INTEGER,
    count_of_trainees INTEGER,
    id_price INTEGER,
    FOREIGN KEY (id_price) REFERENCES price(id)
);

CREATE TABLE organization
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_course INTEGER,
    name VARCHAR(25),
    address VARCHAR(25),
    telephone VARCHAR(25),
    email VARCHAR(25),
    FOREIGN KEY (id_course) REFERENCES course(id)
);

CREATE TABLE teacher
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(25),
    birthday VARCHAR(15),
    gender VARCHAR(15),
    education VARCHAR(25),
    category VARCHAR(25)
);

INSERT INTO teacher(name,birthday,gender,education,
category)
VALUES 
( 'Фролов', '24.08.1967', 'мужской', 'высшее', 'высшая'),
( 'Аристотель', '19.11.1900', 'мужской', 'высшее', 'высшая'),
( 'Павлов', '26.09.1849', 'мужской', 'высшее', 'высшая');

CREATE TABLE teacher_course
(
    id_teacher INTEGER,
    id_course INTEGER,
    start_date VARCHAR(15),
    end_date VARCHAR(15),
    FOREIGN KEY (id_teacher) REFERENCES teacher(id),
    FOREIGN KEY (id_course) REFERENCES course(id)  
);

CREATE TABLE collaborator
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(25),
    position VARCHAR(25),
    id_course INTEGER,
    FOREIGN KEY (id_course) REFERENCES course(id) 
);

CREATE TABLE company_collaborator
(
    id_collaborator INTEGER,
    id_company INTEGER,
    FOREIGN KEY (id_collaborator) REFERENCES collaborator(id) ,
    FOREIGN KEY (id_company) REFERENCES company(id) 
);

CREATE TABLE bid
(
    id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_company INTEGER,
    id_course INTEGER,
    term INTEGER,
    count_of_trainees INTEGER,
    FOREIGN KEY (id_company) REFERENCES company(id),
    FOREIGN KEY (id_course) REFERENCES course(id)
);